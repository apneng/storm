<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>

	<!-- 缓存管理 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>

    <!-- 自定义的Shiro Filter-->  
   <bean id="AuthFilter" class="com.ggy.util.filter.AuthFilter">
   		
   </bean>  

	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->  
	<bean id="myRealm" class="com.ggy.util.filter.AuthRealm"/>  
	<!-- 安全管理器 -->
	<!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->  
	<!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->  
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	    <property name="realm" ref="myRealm"/>  
	    <property name="cacheManager" ref="cacheManager"></property>
	    <!-- <property name="rememberMeManager" ref="rememberMeManager"/> -->
	</bean>  
	   
	<!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->  
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>  
	    <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
	    <property name="loginUrl" value="/jsp/login.jsp" />
	    <!-- 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码) -->  
	    <!-- <property name="successUrl" value="/pages/sys/main"/> -->  
	    <!-- 用户访问未对其授权的资源时,所显示的连接 -->  
	    <property name="unauthorizedUrl" value="/jsp/404.jsp"/> 
	    <property name="filters">    
           <map>    
               <entry key="sperm" value-ref="AuthFilter"/>  
           </map>    
        </property>
	    <!--对页面访问权限进行控制-->
	    <property name="filterChainDefinitions">  
	        <value>
	        	/**/*.do = anon
	        	/favicon.ico = anon
	        	/jsp/list.jsp = authc
	        	<!-- 拦截但开放的资源 anon -->
	        	<!-- /pages/sys/homex.jsp = anon -->
	       <!--  	/jsp/login.jsp = anon
	        	/login.jsp = anon
	        	/favicon.ico = anon
				/sys/login.do = anon
				/sys/logout.do = anon
				/sysFile/*.do = anon
				/**/controller/*.do = anon
				/**/fb.* = anon
				/*/ipt.do = anon	防止360浏览器在导入的时候重定向
				/**/test.* = anon
				/ = authc
				/**/*.jsp = authc
				/**/*.do = authc -->
	        </value>  
	    </property>
	</bean>  
	   
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	
</beans>